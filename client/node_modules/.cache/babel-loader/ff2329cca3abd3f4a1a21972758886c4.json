{"ast":null,"code":"var _jsxFileName = \"/Users/brynfrayne/BrainStation-Local/Brainstation/Projects/BrainFlix/bryn-frayne-brainflix/src/Components/MainVideo/MainVideo.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport VideosArray from \"../../Assets/Data/video-details.json\"; // import VideoDetailsArray from \"../../Assets/Data/videos.json\";\n\nimport Video from \"../Video/Video\";\nimport VideoTitle from \"../VideoTitle/VideoTitle\";\nimport VideoStats from \"../VideoStats/VideoStats\";\nimport VideoDescription from \"../VideoDescription/VideoDescription\";\nimport Comments from \"../Comments/Comments\";\nimport VideoList from '../VideoList/VideoList';\nimport \"./MainVideo.scss\";\nimport axios from 'axios'; // const apiKey = \"58b01201-9bc4-44e9-8026-c3e3e1711c36\";\n// const url = \"https://project-2-api.herokuapp.com/\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainVideo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      videos: VideosArray[0],\n      videoDetails: VideoDetailsArray\n    };\n\n    this.getVideo = () => {\n      if (this.props.match.params.videoId) {\n        this.getSpecificVideoId(this.props.match.params.videoId);\n      } else {\n        axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36').then(response => {\n          this.getSpecificVideoId(response.data[0].id);\n        });\n      }\n    };\n\n    this.selectVideo = videoId => {\n      const selectedVideo = VideosArray.find(video => videoId === video.id);\n      this.setState({\n        videos: selectedVideo\n      });\n    };\n  }\n\n  getSpecificVideoId(id) {\n    axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36').then(response => {\n      console.log(response.data[0].id);\n    });\n  }\n\n  componentDidMount() {\n    axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36').then(response => {\n      this.setState({\n        videos: response.data\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.videoId !== prevProps.match.params.videoId) {\n      this.getVideo();\n    }\n  }\n\n  render() {\n    const filteredVideoList = this.state.videoDetails.filter(video => video.id !== this.state.videos.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-video\",\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        videoImage: this.state.videos.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-video-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-video__text\",\n          children: [/*#__PURE__*/_jsxDEV(VideoTitle, {\n            title: this.state.videos.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(VideoStats, {\n            likes: this.state.videos.likes,\n            views: this.state.videos.views,\n            channel: this.state.videos.channel,\n            date: new Date(this.state.videos.timestamp).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(VideoDescription, {\n            description: this.state.videos.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            commentCounter: this.state.videos.comments.length,\n            commentsArray: this.state.videos.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n          videos: filteredVideoList,\n          selectVideo: this.selectVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/brynfrayne/BrainStation-Local/Brainstation/Projects/BrainFlix/bryn-frayne-brainflix/src/Components/MainVideo/MainVideo.js"],"names":["React","Component","VideosArray","Video","VideoTitle","VideoStats","VideoDescription","Comments","VideoList","axios","MainVideo","state","videos","videoDetails","VideoDetailsArray","getVideo","props","match","params","videoId","getSpecificVideoId","get","then","response","data","id","selectVideo","selectedVideo","find","video","setState","console","log","componentDidMount","componentDidUpdate","prevProps","render","filteredVideoList","filter","image","title","likes","views","channel","Date","timestamp","toLocaleDateString","description","comments","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport VideosArray from \"../../Assets/Data/video-details.json\";\n// import VideoDetailsArray from \"../../Assets/Data/videos.json\";\nimport Video from \"../Video/Video\";\nimport VideoTitle from \"../VideoTitle/VideoTitle\" ;\nimport VideoStats from \"../VideoStats/VideoStats\";\nimport VideoDescription from \"../VideoDescription/VideoDescription\";\nimport Comments from \"../Comments/Comments\";\nimport VideoList from '../VideoList/VideoList';\nimport \"./MainVideo.scss\";\nimport axios from 'axios';\n\n// const apiKey = \"58b01201-9bc4-44e9-8026-c3e3e1711c36\";\n// const url = \"https://project-2-api.herokuapp.com/\";\nexport default class MainVideo extends Component {\n    state = {\n        videos: VideosArray[0],\n        videoDetails: VideoDetailsArray\n   } \n\n   getSpecificVideoId(id) {\n       axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36')\n        .then((response) => {\n            console.log(response.data[0].id)\n        })\n   }\n\n   getVideo = () => {\n       if (this.props.match.params.videoId) {\n           this.getSpecificVideoId(this.props.match.params.videoId);\n       } else {\n           axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36')\n            .then((response) => {\n                this.getSpecificVideoId(response.data[0].id);\n            });\n       }\n   };\n\n\n   componentDidMount() {\n       axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36')\n        .then((response) => {\n            this.setState({\n                videos:response.data,\n            })\n        })\n   }\n\n   componentDidUpdate(prevProps) {\n       if (this.props.match.params.videoId !== prevProps.match.params.videoId) {\n           this.getVideo();\n       }\n   }\n\n   selectVideo = (videoId) => {\n\n    const selectedVideo = VideosArray.find((video) => videoId === video.id);\n\n        this.setState({\n            videos:selectedVideo,\n        });\n   };\n   \n    render(){\n    const filteredVideoList = this.state.videoDetails.filter((video) => video.id !== this.state.videos.id)\n    \n\n     \n    return (\n        <div className=\"main-video\">\n            <Video videoImage={this.state.videos.image}/>\n            <div className=\"comment-video-wrapper\">\n                <div className=\"main-video__text\">\n                    <VideoTitle title={this.state.videos.title}/>\n                    <VideoStats likes={this.state.videos.likes} views={this.state.videos.views} channel={this.state.videos.channel} date={new Date(this.state.videos.timestamp).toLocaleDateString()}/>\n                    <VideoDescription description={this.state.videos.description}/>\n                    <Comments commentCounter={this.state.videos.comments.length} commentsArray={this.state.videos.comments}/>\n                </div>\n                <VideoList videos={filteredVideoList} selectVideo={this.selectVideo}/>\n            </div>\n            </div>\n        \n    )\n}}\n"]},"metadata":{},"sourceType":"module"}