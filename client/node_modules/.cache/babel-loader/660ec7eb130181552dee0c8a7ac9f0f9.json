{"ast":null,"code":"var _jsxFileName = \"/Users/brynfrayne/BrainStation-Local/Brainstation/Projects/BrainFlix/bryn-frayne-brainflix/src/Components/MainVideo/MainVideo.js\";\nimport React from 'react';\nimport { Component } from 'react'; // import VideosArray from \"../../Assets/Data/video-details.json\";\n// import VideoDetailsArray from \"../../Assets/Data/videos.json\";\n\nimport Video from \"../Video/Video\";\nimport VideoTitle from \"../VideoTitle/VideoTitle\";\nimport VideoStats from \"../VideoStats/VideoStats\";\nimport VideoDescription from \"../VideoDescription/VideoDescription\";\nimport Comments from \"../Comments/Comments\";\nimport VideoList from '../VideoList/VideoList';\nimport \"./MainVideo.scss\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36\";\nconst url = \"https://project-2-api.herokuapp.com/videos/\";\nconsole.log(this.props.match.params);\nexport default class MainVideo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      videos: {},\n      videoDetails: []\n    };\n\n    this.getVideo = () => {\n      if (this.props.match.params.videoId) {\n        this.getSpecificVideoId(this.props.match.params.videoId);\n      } else {\n        axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36').then(response => {\n          this.getSpecificVideoId(response.data[0].id);\n        });\n      }\n    };\n  }\n\n  getSpecificVideoId(id) {\n    axios.get(url + id + apiKey).then(response => {\n      // console.log(response.data[0].id)\n      this.setState({\n        videos: response.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    axios.get(url + apiKey).then(response => {\n      this.setState({\n        videoDetails: response.data\n      });\n    });\n  } //    componentDidUpdate(prevProps) {\n  //        if (this.props.match.params.videoId !== prevProps.match.params.videoId) {\n  //            this.getVideo();\n  //        }\n  //    }\n  //    selectVideo = (videoId) => {\n  //     // const selectedVideo = VideosArray.find((video) => videoId === video.id);\n  //         this.setState({\n  //             videos:selectedVideo,\n  //         });\n  //    };\n\n\n  render() {\n    // const filteredVideoList = this.state.videoDetails.filter((video) => video.id !== this.state.videos.id)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-video\",\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        videoImage: this.state.videos.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-video-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-video__text\",\n          children: [/*#__PURE__*/_jsxDEV(VideoTitle, {\n            title: this.state.videos.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(VideoStats, {\n            likes: this.state.videos.likes,\n            views: this.state.videos.views,\n            channel: this.state.videos.channel,\n            date: new Date(this.state.videos.timestamp).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(VideoDescription, {\n            description: this.state.videos.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n          videos: this.state.videoDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n} // videos={filteredVideoList}","map":{"version":3,"sources":["/Users/brynfrayne/BrainStation-Local/Brainstation/Projects/BrainFlix/bryn-frayne-brainflix/src/Components/MainVideo/MainVideo.js"],"names":["React","Component","Video","VideoTitle","VideoStats","VideoDescription","Comments","VideoList","axios","apiKey","url","console","log","props","match","params","MainVideo","state","videos","videoDetails","getVideo","videoId","getSpecificVideoId","get","then","response","data","id","setState","componentDidMount","render","image","title","likes","views","channel","Date","timestamp","toLocaleDateString","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\n// import VideosArray from \"../../Assets/Data/video-details.json\";\n// import VideoDetailsArray from \"../../Assets/Data/videos.json\";\nimport Video from \"../Video/Video\";\nimport VideoTitle from \"../VideoTitle/VideoTitle\" ;\nimport VideoStats from \"../VideoStats/VideoStats\";\nimport VideoDescription from \"../VideoDescription/VideoDescription\";\nimport Comments from \"../Comments/Comments\";\nimport VideoList from '../VideoList/VideoList';\nimport \"./MainVideo.scss\";\nimport axios from 'axios';\n\nconst apiKey = \"?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36\";\nconst url = \"https://project-2-api.herokuapp.com/videos/\";\nconsole.log(this.props.match.params)\nexport default class MainVideo extends Component {\n    state = {\n        videos: {},\n        videoDetails: []\n   } \n\n   getSpecificVideoId(id) {\n       axios.get(url+id+apiKey)\n        .then((response) => {\n            // console.log(response.data[0].id)\n            this.setState({\n            videos:response.data,\n        })\n    })\n   }\n\n   getVideo = () => {\n       if (this.props.match.params.videoId) {\n           this.getSpecificVideoId(this.props.match.params.videoId);\n       } else {\n           axios.get('https://project-2-api.herokuapp.com/videos?api_key=58b01201-9bc4-44e9-8026-c3e3e1711c36')\n            .then((response) => {\n                this.getSpecificVideoId(response.data[0].id);\n            });\n       }\n   };\n\n\n   componentDidMount() {\n       axios.get(url+apiKey)\n        .then((response) => {\n            this.setState({\n                videoDetails:response.data,\n            })\n        })\n   }\n\n//    componentDidUpdate(prevProps) {\n//        if (this.props.match.params.videoId !== prevProps.match.params.videoId) {\n//            this.getVideo();\n//        }\n//    }\n\n//    selectVideo = (videoId) => {\n\n//     // const selectedVideo = VideosArray.find((video) => videoId === video.id);\n\n//         this.setState({\n//             videos:selectedVideo,\n//         });\n//    };\n   \n    render(){\n    // const filteredVideoList = this.state.videoDetails.filter((video) => video.id !== this.state.videos.id)\n    \n    \n     \n    return (\n        <div className=\"main-video\">\n            <Video videoImage={this.state.videos.image}/>\n            <div className=\"comment-video-wrapper\">\n                <div className=\"main-video__text\">\n                    <VideoTitle title={this.state.videos.title}/>\n                    <VideoStats likes={this.state.videos.likes} views={this.state.videos.views} channel={this.state.videos.channel} date={new Date(this.state.videos.timestamp).toLocaleDateString()}/>\n                    <VideoDescription description={this.state.videos.description}/>\n                    {/* <Comments commentCounter={this.state.videos.comments.length} commentsArray={this.state.videos.comments}/> */}\n                </div>\n                <VideoList  videos={this.state.videoDetails}/>\n            </div>\n            </div>\n        \n    )\n}}\n// videos={filteredVideoList}"]},"metadata":{},"sourceType":"module"}